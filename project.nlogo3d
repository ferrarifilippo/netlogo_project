breed [drones drone]
breed [trees tree]
breed [envconstructors envconstructor]

directed-link-breed [drone-links drone-link]

globals [
  t      ;; time interval
  t-dead ;; time-interval
  tmp    ;; tmp variable
  tmp2   ;; tmp variable

  no-leader?   ;; true if there aren't leader, false otherwise
  leader-color ;;
  fire?        ;; true if there is a fire, false otherwise

  mapAlt groundAlt flightAlt ;; variables Z axis
  base-patches base-entry base-central ;; precache

  fire-start    ;; variable for the plot
  fire-duration ;; variable in the plot
  num-followers ;; variable in the plot
  drones-dead   ;; variable in the plot
  distance-fire-lake  ;; variable in the plot

  signal-direction ;; direction of the messages
  message-here ;; true if the drone receive messages
]

patches-own [
  lakes ;; the patches where there is a lake
  nearest-lake ;;the nearest lake whene there are more than 1
  lake? ;; true if there is a lake in this patch, false otherwise
  lakeXcor ;; coordinate x of the center of the lake
  lakeYcor ;; coordinate y of the center of the lake

  fire-here? ;; true if fire is in this patch, false otherwise
  fireXcor ;; coordinate x of the fire
  fireYcor ;; coordinate y of the fire

  fire-amount          ;; amount of fire on this patch (0, 1, or 2)
  base?                ;; true on base patches, false elsewhere
  base-scent           ;; number that is higher closer to the base
  fire-source-number   ;; number (1, 2, or 3) to identify the fire sources
  tree-with-fire       ;; index of tree with fire

  message ;; message diffuse by the leader
  wifi?   ;; true if the patch is in the wifi area
]

drones-own[
  strategies           ;; strategies of the drones
  strategy-begin-time  ;; to be able to interrupt a strategy that has lasted too long

  fly?                 ;; true if the drone is flying, false otherwise
  leader?              ;; true if the drone is leader, false otherwise
  follower?            ;; true if the drone is following a leader, false otherwise
  dronemates           ;; neighbor drones
  nearest-neighbor     ;; nearest neighbor
  nearest-leader       ;; nearest leader respect the signal
  leaders              ;; drones that send messages

  leader-strategy      ;; the strategy of the leader

  speed                ;; velocity of the drones
  maxturn              ;; max angle of the turn


  take-off-anim-frame  prev-heading anim-tmp ;; temporal variables for animation

  following-leader     ;; variable to help idenditicate the following leader drones
]

;----------------------;
;        SETUP         ;
;----------------------;

to setup
  clear-all

  setup-globals
  setup-env
  setup-precache

  setup-drones

  set t random time-fire / 2
  set t-dead random time-dead + 20

  display
  reset-ticks
end

to setup-globals
  set mapAlt 0
  set groundAlt 1
  set flightAlt  (floor max-pzcor - 3);
  set drones-dead 0

  set fire? false
  set no-leader? true
end

to setup-env
  ask patches [set base? false set lake? false set fire-here? false]

  ;; Grass
  ask patches with [pzcor = mapAlt][set pcolor green + (random-float 1) - 2]

  ;; Rivers
  if n-rivers > 0 [
    repeat n-rivers [
      create-envconstructors 1 [
        ifelse random-float 1 <= 0.5 [
          set xcor 0
          set ycor random max-pycor
          set heading 90
        ]
        [
          set ycor 0
          set xcor random max-pxcor
          set heading 0
        ]
        set zcor mapAlt

        ask patch-here [set pcolor blue]

        repeat max-pxcor + max-pycor [
          rt random 30 - 15
          fd 1
          ask patch-here [
             set pcolor blue
          ]
        ]
        die
      ]
    ]
  ]

  ;; Lakes
  ask n-of n-lakes patches with [pzcor = mapAlt and pxcor > 20 and pycor > 20]
  [
     ask patches with [distance-nowrap myself < 8 and pzcor = mapAlt]
     [
       set pcolor blue

     ]
     ask patches with [distance-nowrap myself < 1 and pzcor = mapAlt]
     [
       set lake? true set lakeXcor pxcor set lakeYcor pycor
     ]
  ]


  ;; Trees
  if n-trees > 0 [
    repeat n-trees [
      create-trees 1 [
        set xcor random 100
        set ycor random 100

        ;;remove the trees near the base
        if xcor < 20 and ycor < 15
        [
           die
        ]
        if xcor = 0 or ycor = 0 or xcor = max-pxcor or ycor = max-pycor
        [
           die
        ]
        set zcor mapAlt

        set tmp false
        ask patch-here [ if pcolor = blue [set tmp true]]
        if tmp = true [
           die
        ]
        set zcor groundAlt + 0.5
      ]
      ask trees[
        set color 51
        set size 2
        set shape "tree"
      ]
    ]
  ]

  ;; Base
  ask patches with[pzcor = mapAlt and pxcor >= 3 and pxcor < 5 and pycor >= 0 and pycor < 12][set pcolor 1 set base? true] ;; pista verticale
  ask patches with[pzcor = mapAlt and pycor = 0 and pxcor >= 0 and pxcor < 18][set pcolor 1 set base? true] ;; pista orizzontale

  ;; Base building
  ask patches with[pzcor <= groundAlt and pxcor >= 0 and pxcor < 3 and pycor >= 0 and pycor < 5][set pcolor red set base? false]
end

to setup-precache
  set base-patches (patches with [base? and pzcor = mapAlt]) ; precache to speedup things
  set base-entry max-one-of (base-patches with-min [pycor]) [pxcor]
  set base-central min-one-of (base-patches with-min [pxcor]) [pycor]
end


to setup-drones
  if n-drones > 0 [
    create-drones n-drones
    ask drones
    [
      set fly? false
      set strategies[];
      set leader? false
      set follower? false
      set leader-strategy false
      set following-leader false
      set dronemates no-turtles

      let first-drone min [who] of drones
      let last-drone max [who] of drones

      set speed 0.25 * simu-speed
      set maxturn 10 * simu-speed

      ;;position
      move-to one-of patches with [pxcor >= 5 and pycor = 0 and pzcor = groundAlt and [base?] of patch-at 0 0 (groundAlt * -1)]
      set heading 270 ;;heading (0-360°)
      set roll 0
      set pitch 0

      ;;shape
      set shape "airplane"
      set color white
      set size 1.5

      ;;animation frame
      set take-off-anim-frame 0
      set anim-tmp nobody

      ;;label
      set label who - min [who] of drones
      set label-color white

      ;; FIRST STRATEGY
      add-strategy "drones-start" "true"
    ]
  ]
end

;-----------------------;
;         MAIN          ;
;-----------------------;

to go  ;; forever buttonpa
  every t[
    set t random time-fire + 10
    ask one-of trees[
      random-fire
    ]
  ]

  every t-dead[
    set t-dead random time-dead + 20
    ;;set t-dead random 100 + 10
    ;;set t-dead random 1000 + 100
    if count drones with [zcor >= flightAlt - 1] > 0[
      ask one-of drones with [zcor >= flightAlt - 1][
        add-strategy "drone-dead" "true"
      ]
    ]
  ]

  ask drones
  [
    if empty? get-strategies
    [
        drone-choose-strategy
    ]

    execute-strategies
  ]

  every evaporation-rate[
    ask patches with [ pzcor > 2 ][
       set wifi? false
    ]
  ]

  ask patches with [pzcor > 2]
  [
    if show-wifi[
       recolor-patch
    ]
  ]
  ifelse fire?[
    if fire-start = 0[
      set fire-start ticks
    ]
  ]
  [
    if fire-start != 0[
      set fire-duration (ticks - fire-start)
      ;show fire-duration
      set fire-start 0
    ]
    clear-links
  ]
  display
  tick
  wait 0.01
end

to random-fire
  if not fire? [  ;;one fire at a time for the moment
    if shape = "tree"[
      set color red
      set size 4
      set shape "fire"

      set tmp who
      set fire? true
      ask patch-at 0 0 5.5 [set fire-amount 15 set tree-with-fire tmp]
    ]
  ]
end

to recolor-patch
  ifelse wifi?
  [ set pcolor yellow]
  [ set pcolor [255 255 255 0] ]
end

to fd-nowrap [number]
  ifelse distance-nowrap (patch-ahead number) <= (number + 1) [ ; simply check if after hopping forward we will be a lot further than normally
    fd number
  ]
  [
    if xcor = ycor or (xcor > max-pxcor and ycor > max-pycor) [rt 180]

    if xcor > ycor and xcor < max-pxcor  [ ;;south wall
      ifelse heading > 180 [ rt 90 + 15 ][lt 90 + 15]
    ]
    if xcor >= max-pxcor [ ;;east wall
      ifelse heading > 90 [ rt 90 + 15 ][lt 90 + 15]
    ]
    if ycor >= max-pycor [ ;;north wall
      ifelse heading > 0 [rt 90 + 15][lt 90 + 15]
    ]
    if ycor > xcor and ycor < max-pycor  [ ;;west wall
      ifelse heading > 270 [rt 90 + 15][lt 90 + 15]
    ]

    ifelse distance-nowrap (patch-ahead number) <= (number + 1) [ ; simply check if after hopping forward we will be a lot further than normally
      fd number
    ][
      fd (number / 10) * -1
    ]
  ]
end

to extinguished-fire
  set fire? false
  set fireXcor false
  set fireYcor false
  set fire-here? false

  set no-leader? true
  set num-followers count drones with [follower? = true]

  set lakes patches with [lake? = true]
  set nearest-lake min-one-of lakes [distance myself]

  set distance-fire-lake distance nearest-lake
end


;-----------------------;
;    DRONE STRATEGIES   ;
;-----------------------;

to drones-start
  set heading 270
  add-strategy "drones-take-off" "true"
end

to drones-take-off
  let lspeed speed

  ; Precaching some data to accelerate
  let base-max-pycor 0
  let base-min-pycor 0
  ifelse anim-tmp = nobody [
    set base-max-pycor max [pycor] of base-patches
    set base-min-pycor [pycor] of base-central
    set anim-tmp (list base-max-pycor base-min-pycor)
  ]
  [
    set base-max-pycor item 0 anim-tmp
    set base-min-pycor item 1 anim-tmp
  ]

  ;; inizio decollo
  if take-off-anim-frame = 0 [ set take-off-anim-frame 1 ]

  ;; Frame 1: avanza lungo la pista
  if take-off-anim-frame = 1 [
    ;; Criteri per l'arresto del frame 1 e la preparazione del frame 2
    let right-patch [patch-at 0 0 (pzcor * -1)] of (patch-right-and-ahead 90 1)
    ;;Si gira solo se la zona a destra è una pista e se si è sufficientemente avanzati verso il centro della zona (per evitare che il drone vada lungo il bordo della zona).
    if [base?] of right-patch and xcor <= ([pxcor] of right-patch) [
      set take-off-anim-frame 2
      ;;Memorizziamo l'angolo corrente in modo da sapere quando abbiamo finito di ruotare esattamente di 90 gradi.
      set prev-heading heading
    ]

    ; Avanziamo solo se non c'è un drone davanti a noi (se ce n'è uno che non ha finito di girare).
    if not any? drones-on patch-ahead 2 and not any? drones-on patch-ahead 1 [
      fd (lspeed / 2)
    ]
  ]

  ;; Frame 2: curva alla curva della pista
  if take-off-anim-frame = 2 [
    rt 20 ;* simu-speed

    ;; Criteri per l'arresto del frame 2 e la preparazione del frame 3
    if subtract-headings heading prev-heading >= 90 [
      set take-off-anim-frame 3
    ]
  ]

  ; Frame 3: decollo
  if take-off-anim-frame = 3 [
    let dist (base-max-pycor + 1) - base-min-pycor
    ;; calcolo di un angolo di beccheggio, in modo che l'aeromobile si alzi meno all'inizio e più verso la fine
    let alt ( (1 - (((base-max-pycor + 1) - ycor) / dist)) * (flightAlt - groundAlt - 2) + groundAlt + 1)
    face-nowrap patch pxcor (base-max-pycor + 5) alt
    fd lspeed

    ; Fine dell'animazione
    if pycor >= (base-max-pycor + 5) [
      set take-off-anim-frame 0
      set zcor flightAlt
    ]
  ]

  ;Animazione in corso
  ifelse take-off-anim-frame != 0 [
    add-strategy "drones-take-off" "true"
  ]
  ;Animazione terminataa
  [
    set anim-tmp nobody ; resetto anim-tmp per usarla in altre procedure
  ]
end

to drone-random-exploration

  let prevheading heading

  rt (random (maxturn * 2)) - maxturn

  let dirCorrection subtract-headings heading prevheading

  set color white
  set pitch 0
  set roll 0
  ;; set roll dirCorrection * 3 / simu-speed
  ;; set roll 2
  fd-nowrap speed

  ifelse drone-receive-messages[
    add-strategy "drone-follow-the-leader" "true"
  ][
    set tmp false

    ask fast-in-radius-nowrap patches 4 [
      if fire-amount > 0
      [
        set tmp true
        set fireXcor pxcor
        set fireYcor pycor
        set fire-here? true
      ]
    ]

    ifelse tmp = true[
      add-strategy "drone-move-to-lake" "true"
    ][
      add-strategy "drone-random-exploration" "true"
    ]
  ]
end

to drone-move-to-lake
  ifelse fire? = false[
    add-strategy "drone-random-exploration" "true"
  ]
  [
    set leader? true
    set no-leader? false

    drone-send-messages ;;communicate to the neighbors

    set color orange
    set leader-color orange
    set label-color white

    let newheading heading

    set lakes patches with [lake? = true]

    set nearest-lake min-one-of lakes [distance myself]

    set newheading towards-nowrap nearest-lake
    ;set newheading towards-nowrap one-of patches with [lake?]

    let dirCorrection subtract-headings newheading heading

    ;;rt min (list ((newheading - oldheading) mod 360) 50)
    ifelse dirCorrection > maxturn [set dirCorrection maxturn]
    [
      if dirCorrection < maxturn * -1 [set dirCorrection maxturn * -1]
    ]

    rt dirCorrection

    set pitch 0
    set roll 0
    fd-nowrap speed

    set tmp false

    ask patch-at 0 0 -7[
      if lake?
      [
        set tmp true
      ]
    ]

    ifelse tmp = true[
      add-strategy "drone-move-to-fire" "true"
    ][
      add-strategy "drone-move-to-lake" "true"
    ]
  ]
end

to drone-move-to-fire
  ifelse fire? = false[
    add-strategy "drone-random-exploration" "true"
  ]
  [
    set leader? true
    set no-leader? false
    set color cyan
    set leader-color cyan

    drone-send-messages ;;communicate to the neighbors

    let newheading heading

    set newheading towards-nowrap one-of patches with [fire-here?]

    let dirCorrection subtract-headings newheading heading

    ;;rt min (list ((newheading - oldheading) mod 360) 50)
    ifelse dirCorrection > maxturn [set dirCorrection maxturn]
    [
      if dirCorrection < maxturn * -1 [set dirCorrection maxturn * -1]
    ]

    rt dirCorrection

    set pitch 0
    set roll 0
    fd-nowrap speed

    set tmp false
    set tmp2 false
    ask neighbors[
      if fire-amount > 0
      [
        ifelse fire-amount = 1[
          set tmp true
          extinguished-fire
          ask drones [
            set leader? false
          ]
          ask tree tree-with-fire[
            die
          ]
        ]
        [
          set tmp2 true      ;; and reduce the fire amount
          if ((fire-amount mod 4) = 0) and fire-amount != 4[
            ask tree tree-with-fire[
              set size size - 1
            ]
          ]
        ]
        set fire-amount fire-amount - 1
      ]

    ]

    ifelse tmp = true[
      add-strategy "drone-random-exploration" "true"
    ][
      ifelse tmp2 = true[
        add-strategy "drone-move-to-lake" "true"
      ][
        add-strategy "drone-move-to-fire" "true"
      ]
    ]
  ]
end

to drone-follow-the-leader
  ifelse no-leader? = true or not leader-around[
    set follower? false
    fd-nowrap speed
    add-strategy "drone-random-exploration" "true"
  ][
    set follower? true

    if show-links[
      find-leader
      if nearest-leader != 0[
        create-drone-link-to nearest-leader
      ]
    ]

    set tmp false
    set tmp2 false

    ask patch-at 0 0 -7[
      if pcolor = blue
      [
        set tmp true
      ]
    ]
    if tmp = true and leader-color = cyan[
      set color leader-color
    ]
    if color = cyan [
      ask fast-in-radius-nowrap patches 5 [
        if fire-amount > 0
        [
          set tmp2 true

          if fire-amount > 1[
            if ((fire-amount mod 4) = 0) and fire-amount != 4[
              ask tree tree-with-fire[
                set size size - 1
              ]
            ]
            set fire-amount fire-amount - 1
          ]
        ]
      ]
    ]
    if tmp2 = true and leader-color = orange[
      set color leader-color
    ]
    ifelse no-leader? = true or not leader-around[
      add-strategy "drone-random-exploration" "true"
      set follower? false

    ][

      flock
      fd-nowrap speed

      if fire?[
        add-strategy "drone-follow-the-leader" "true"
      ]
    ]
  ]
end

to drone-dead
  set follower? false
  set leader? false

  ifelse zcor > groundAlt + 1[
    set pitch -20 - random 10
    set roll 0
    fd-nowrap speed
  ][
    if count trees in-radius-nowrap 1 > 0[
      ask one-of trees in-radius-nowrap 1[
        set color red
        set size 4
        set shape "fire"

        set tmp who
        set fire? true
        ask patch-at 0 0 5.5 [set fire-amount 15 set tree-with-fire tmp]
      ]
    ]
    set drones-dead drones-dead + 1
    die ;; the drone is dead
    stop
  ]

  add-strategy "drone-dead" "true"
end


;-----------------------;
;       FLOCKING        ;
;-----------------------;

to flock
  ;; procedure for arranging drones in formation
  ;; and preventing them from getting too close or aligned
  find-dronemates
  if any? dronemates
  [
     find-nearest-neighbor
     ifelse distance nearest-neighbor < minimum-separation
     [ separate ]
     [
        find-leader

        let newheading heading

        if nearest-leader != 0[

        set newheading towards-nowrap nearest-leader

        let dirCorrection subtract-headings newheading heading

        ifelse dirCorrection > maxturn [set dirCorrection maxturn]
        [
          if dirCorrection < maxturn * -1 [set dirCorrection maxturn * -1]
        ]

        rt dirCorrection
      ]
    ]
  ]
end

to find-dronemates
  ;; procedure for finding drones around, engaged in the activity
  set dronemates other drones in-radius vision
end

to find-nearest-neighbor
  ;; procedure for selecting the nearest drone, simulate proximity sensors
  set nearest-neighbor min-one-of dronemates [distance myself]
end

to find-leader
  ;; if drone is in the wi-fi area
  if drone-receive-messages[
    ;; this code simulates the drone heading toward the strongest signal, thus the nearest leader
    set nearest-leader min-one-of drones with [leader? = true] [distance myself]
  ]
end

;; separate procedure
to separate
  turn-away ([heading] of nearest-neighbor) max-separate-turn
end

to turn-away [new-heading max-turn]  ;; turtle procedure
  turn-at-most (subtract-headings heading new-heading) max-turn
end

;; turn right by "turn" degrees (or left if "turn" is negative),
;; but never turn more than "max-turn" degrees
to turn-at-most [turn max-turn]  ;; turtle procedure

  let newheading heading

  ifelse turn > maxturn [set turn maxturn]
  [
    if turn < maxturn * -1 [set turn maxturn * -1]
  ]
  rt turn
end


;--------------------------;
; CODE FOR MANAGE STRATEGY ;
;--------------------------;

to drone-choose-strategy
  add-strategy "drone-random-exploration" "true"
end

to execute-strategies
;;;locals [myInt]  ;; first strategies
  ifelse empty? strategies [stop][
  let myInt get-strategy
  run strategy-name myInt
  if runresult strategy-done myInt [remove-strategy myInt]
    if show-strategies [set label strategy-name myInt] ;show strategies] ;; Just for debugging.
  ]
end

;; returns the current strategy of the agent
to-report current-strategy
  report strategy-name first strategies
end

;; Reports the full strategy structure
to-report get-strategy
  ifelse empty? strategies [
    report []
  ]
  [
    report first strategies
  ]
end

;; Reports the fill list of all strategies
to-report get-strategies
  ifelse empty? strategies [
    report []
  ]
  [
    report strategies
  ]
end

;; Returns the intetnion name (the executable)
to-report strategy-name [strategy]
  report item 0 strategy
end

;; return the done-methods (arguments) of the strategy. If it evaluates to true
;; then the strategy is removed.
to-report strategy-done [strategy]
  report item 1 strategy
end

to pop-strategy
  set strategies but-first strategies
end

;; Removes a specific strategy from the strategy stack
to remove-strategy [bdi-lib##strategy]
  set strategies remove-item (position bdi-lib##strategy strategies) strategies
end

;; Adds an strategy in the strategies list. REMEMBER that strategies are stored in a STACK!
;; The first argument is the strategy name that should be some executable procedure
;; you encode in NetLogo. The second argument should be a REPORTER that when evaluates to
;; true the strategy is removed (either accomplished or dropped).
;; BOTH ARGUMENTS HAVE TO BE STRINGS (see run/runresult primitive procedures in NetLogo)

to add-strategy [name done]
  if not empty? name and not empty? done[
    set strategies fput (list name done) strategies
  ]
end


;-----------------------;
;     COMMUNICATION     ;
;-----------------------;

to drone-send-messages
  ;; the leader sends messages in the wifi area around him
  set signal-direction heading

  ask fast-in-radius-nowrap patches wifi-coverage-radius[
      set wifi? true
      set message signal-direction
  ]
end

to-report drone-receive-messages
  ;; the follower checks if it receives messages
  set message-here false
  let p patch-here
  ask patch-here[
    if wifi? = true
    [
      set message-here true
    ]
  ]
  report message-here
end


to-report leader-around
  set leaders other drones in-radius maximum-separation-leader with [leader? = true]
  ifelse count leaders = 0[
    report false
  ][
    report true
  ]
end


;-----------------------;
;     AUX FUNCTIONS     ;
;-----------------------;

; Faster implementation of in-radius than NetLogo native
to-report fast-in-radius [objects radius]
  report objects with [distance myself < radius]
end

; Faster implementation of in-radius-nowrap than NetLogo native
to-report fast-in-radius-nowrap [objects radius]
  report objects with [distance-nowrap myself < radius]
end

to-report agent-set-to-list [agent-set]
  ;report sort agent-set ;; list sorted by default agent order (e.g. by who-number)
  ;report sort-by [ criteria ] agent-set ;; list sorted by user-defined order
  if not any? agent-set [ report [] ]
  report [ self ] of agent-set ;; list, in randomized order
end

to-report list-to-agent-set [L]
  if is-list? L and empty? L [ report no-turtles ]
  ifelse is-turtle? (item 0 L)
  [ report turtles with [member? self L] ]
  [
    ifelse is-link? (item 0 L)
    [ report links with [member? self L] ]
    [ report patches with [member? self L] ]
    ]
end
@#$#@#$#@
GRAPHICS-WINDOW
0
0
773
774
-1
-1
15.0
1
10
1
1
1
0
1
1
1
0
50
0
50
0
10
1
0
1
ticks
30.0

BUTTON
39
12
105
45
NIL
setup
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

INPUTBOX
36
174
124
234
n-drones
40.0
1
0
Number

SLIDER
38
101
210
134
simu-speed
simu-speed
1
4
2.0
1
1
NIL
HORIZONTAL

INPUTBOX
132
175
218
235
n-trees
800.0
1
0
Number

BUTTON
40
55
103
88
NIL
go
T
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

BUTTON
137
56
248
89
10-step
repeat 10 [go]
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

SWITCH
35
581
180
614
show-strategies
show-strategies
1
1
-1000

BUTTON
138
12
247
45
1-step
repeat 1 [go]
NIL
1
T
OBSERVER
NIL
NIL
NIL
NIL
1

SWITCH
34
622
182
655
show-wifi
show-wifi
1
1
-1000

SLIDER
293
162
543
195
vision
vision
0
40.0
34.5
0.5
1
patches
HORIZONTAL

SLIDER
293
126
542
159
minimum-separation
minimum-separation
0
5.0
1.0
0.25
1
patches
HORIZONTAL

SLIDER
292
84
543
117
max-separate-turn
max-separate-turn
0
360
360.0
0.25
1
degrees
HORIZONTAL

SLIDER
293
47
541
80
max-align-turn
max-align-turn
0
360
360.0
0.25
1
degrees
HORIZONTAL

SLIDER
290
282
544
315
max-cohere-turn
max-cohere-turn
0
360
360.0
0.25
1
degrees
HORIZONTAL

SLIDER
291
199
542
232
minimum-separation-leader
minimum-separation-leader
0
10
0.5
0.5
1
patches
HORIZONTAL

SLIDER
34
468
236
501
wifi-coverage-radius
wifi-coverage-radius
0
10
7.5
0.5
1
patches
HORIZONTAL

SLIDER
33
244
218
277
n-rivers
n-rivers
0
5
0.0
1
1
NIL
HORIZONTAL

TEXTBOX
37
152
187
170
ENVIRONMENT
14
0.0
1

TEXTBOX
35
561
185
579
DEBUG
14
0.0
1

TEXTBOX
35
445
185
463
COMMUNICATION
14
0.0
1

TEXTBOX
316
18
515
52
FOLLOW LEADER PATTERN 
14
0.0
1

TEXTBOX
299
343
449
361
PLOTS
14
0.0
1

PLOT
297
536
504
691
Number of follower 
tick
follower
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 0 -16777216 true "" "plot count drones with [follower? = true]"

SWITCH
33
663
182
696
show-links
show-links
1
1
-1000

SLIDER
33
281
217
314
n-lakes
n-lakes
0
2
2.0
1
1
NIL
HORIZONTAL

PLOT
299
369
501
525
Fire duration / Followers
fire-duration
followers
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 2 -13791810 true "" "plotxy fire-duration num-followers"

PLOT
513
369
718
525
Fire duration / Distance lake
fire-duration
distance
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 2 -3844592 true "" "plotxy fire-duration distance-fire-lake"

SLIDER
33
509
235
542
evaporation-rate
evaporation-rate
1
100
2.0
1
1
NIL
HORIZONTAL

PLOT
511
536
718
692
Number of dead
ticks
dead
0.0
10.0
0.0
10.0
true
false
"" ""
PENS
"default" 1.0 0 -16777216 true "" "plot drones-dead"

TEXTBOX
34
334
184
352
RANDOMNESS
14
0.0
1

SLIDER
34
357
217
390
time-fire
time-fire
40
100
40.0
20
1
NIL
HORIZONTAL

SLIDER
33
395
219
428
time-dead
time-dead
100
1000
1000.0
100
1
NIL
HORIZONTAL

SLIDER
290
239
545
272
maximum-separation-leader
maximum-separation-leader
0
30
25.0
0.5
1
patchess
HORIZONTAL

@#$#@#$#@
## WHAT IS IT?

(a general understanding of what the model is trying to show or explain)

## HOW IT WORKS

(what rules the agents use to create the overall behavior of the model)

## HOW TO USE IT

(how to use the model, including a description of each of the items in the Interface tab)

## THINGS TO NOTICE

(suggested things for the user to notice while running the model)

## THINGS TO TRY

(suggested things for the user to try to do (move sliders, switches, etc.) with the model)

## EXTENDING THE MODEL

(suggested things to add or change in the Code tab to make the model more complicated, detailed, accurate, etc.)

## NETLOGO FEATURES

(interesting or unusual features of NetLogo that the model uses, particularly in the Code tab; or where workarounds were needed for missing features)

## RELATED MODELS

(models in the NetLogo Models Library and elsewhere which are of related interest)

## CREDITS AND REFERENCES

(a reference to the model's URL on the web if it has one, as well as any other necessary credits, citations, and links)
@#$#@#$#@
default
true
0
Polygon -7500403 true true 150 5 40 250 150 205 260 250

airplane
true
0
Polygon -7500403 true true 150 0 135 15 120 60 120 105 15 165 15 195 120 180 135 240 105 270 120 285 150 270 180 285 210 270 165 240 180 180 285 195 285 165 180 105 180 60 165 15

arrow
true
0
Polygon -7500403 true true 150 0 0 150 105 150 105 293 195 293 195 150 300 150

box
false
0
Polygon -7500403 true true 150 285 285 225 285 75 150 135
Polygon -7500403 true true 150 135 15 75 150 15 285 75
Polygon -7500403 true true 15 75 15 225 150 285 150 135
Line -16777216 false 150 285 150 135
Line -16777216 false 150 135 15 75
Line -16777216 false 150 135 285 75

bug
true
0
Circle -7500403 true true 96 182 108
Circle -7500403 true true 110 127 80
Circle -7500403 true true 110 75 80
Line -7500403 true 150 100 80 30
Line -7500403 true 150 100 220 30

butterfly
true
0
Polygon -7500403 true true 150 165 209 199 225 225 225 255 195 270 165 255 150 240
Polygon -7500403 true true 150 165 89 198 75 225 75 255 105 270 135 255 150 240
Polygon -7500403 true true 139 148 100 105 55 90 25 90 10 105 10 135 25 180 40 195 85 194 139 163
Polygon -7500403 true true 162 150 200 105 245 90 275 90 290 105 290 135 275 180 260 195 215 195 162 165
Polygon -16777216 true false 150 255 135 225 120 150 135 120 150 105 165 120 180 150 165 225
Circle -16777216 true false 135 90 30
Line -16777216 false 150 105 195 60
Line -16777216 false 150 105 105 60

car
false
0
Polygon -7500403 true true 300 180 279 164 261 144 240 135 226 132 213 106 203 84 185 63 159 50 135 50 75 60 0 150 0 165 0 225 300 225 300 180
Circle -16777216 true false 180 180 90
Circle -16777216 true false 30 180 90
Polygon -16777216 true false 162 80 132 78 134 135 209 135 194 105 189 96 180 89
Circle -7500403 true true 47 195 58
Circle -7500403 true true 195 195 58

circle
false
0
Circle -7500403 true true 0 0 300

circle 2
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240

cow
false
0
Polygon -7500403 true true 200 193 197 249 179 249 177 196 166 187 140 189 93 191 78 179 72 211 49 209 48 181 37 149 25 120 25 89 45 72 103 84 179 75 198 76 252 64 272 81 293 103 285 121 255 121 242 118 224 167
Polygon -7500403 true true 73 210 86 251 62 249 48 208
Polygon -7500403 true true 25 114 16 195 9 204 23 213 25 200 39 123

cylinder
false
0
Circle -7500403 true true 0 0 300

dot
false
0
Circle -7500403 true true 90 90 120

face happy
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 255 90 239 62 213 47 191 67 179 90 203 109 218 150 225 192 218 210 203 227 181 251 194 236 217 212 240

face neutral
false
0
Circle -7500403 true true 8 7 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Rectangle -16777216 true false 60 195 240 225

face sad
false
0
Circle -7500403 true true 8 8 285
Circle -16777216 true false 60 75 60
Circle -16777216 true false 180 75 60
Polygon -16777216 true false 150 168 90 184 62 210 47 232 67 244 90 220 109 205 150 198 192 205 210 220 227 242 251 229 236 206 212 183

fire
false
0
Polygon -7500403 true true 151 286 134 282 103 282 59 248 40 210 32 157 37 108 68 146 71 109 83 72 111 27 127 55 148 11 167 41 180 112 195 57 217 91 226 126 227 203 256 156 256 201 238 263 213 278 183 281
Polygon -955883 true false 126 284 91 251 85 212 91 168 103 132 118 153 125 181 135 141 151 96 185 161 195 203 193 253 164 286
Polygon -2674135 true false 155 284 172 268 172 243 162 224 148 201 130 233 131 260 135 282

fish
false
0
Polygon -1 true false 44 131 21 87 15 86 0 120 15 150 0 180 13 214 20 212 45 166
Polygon -1 true false 135 195 119 235 95 218 76 210 46 204 60 165
Polygon -1 true false 75 45 83 77 71 103 86 114 166 78 135 60
Polygon -7500403 true true 30 136 151 77 226 81 280 119 292 146 292 160 287 170 270 195 195 210 151 212 30 166
Circle -16777216 true false 215 106 30

flag
false
0
Rectangle -7500403 true true 60 15 75 300
Polygon -7500403 true true 90 150 270 90 90 30
Line -7500403 true 75 135 90 135
Line -7500403 true 75 45 90 45

flower
false
0
Polygon -10899396 true false 135 120 165 165 180 210 180 240 150 300 165 300 195 240 195 195 165 135
Circle -7500403 true true 85 132 38
Circle -7500403 true true 130 147 38
Circle -7500403 true true 192 85 38
Circle -7500403 true true 85 40 38
Circle -7500403 true true 177 40 38
Circle -7500403 true true 177 132 38
Circle -7500403 true true 70 85 38
Circle -7500403 true true 130 25 38
Circle -7500403 true true 96 51 108
Circle -16777216 true false 113 68 74
Polygon -10899396 true false 189 233 219 188 249 173 279 188 234 218
Polygon -10899396 true false 180 255 150 210 105 210 75 240 135 240

house
false
0
Rectangle -7500403 true true 45 120 255 285
Rectangle -16777216 true false 120 210 180 285
Polygon -7500403 true true 15 120 150 15 285 120
Line -16777216 false 30 120 270 120

leaf
false
0
Polygon -7500403 true true 150 210 135 195 120 210 60 210 30 195 60 180 60 165 15 135 30 120 15 105 40 104 45 90 60 90 90 105 105 120 120 120 105 60 120 60 135 30 150 15 165 30 180 60 195 60 180 120 195 120 210 105 240 90 255 90 263 104 285 105 270 120 285 135 240 165 240 180 270 195 240 210 180 210 165 195
Polygon -7500403 true true 135 195 135 240 120 255 105 255 105 285 135 285 165 240 165 195

line
true
0
Line -7500403 true 150 0 150 300

line half
true
0
Line -7500403 true 150 0 150 150

pentagon
false
0
Polygon -7500403 true true 150 15 15 120 60 285 240 285 285 120

person
false
0
Circle -7500403 true true 110 5 80
Polygon -7500403 true true 105 90 120 195 90 285 105 300 135 300 150 225 165 300 195 300 210 285 180 195 195 90
Rectangle -7500403 true true 127 79 172 94
Polygon -7500403 true true 195 90 240 150 225 180 165 105
Polygon -7500403 true true 105 90 60 150 75 180 135 105

plant
false
0
Rectangle -7500403 true true 135 90 165 300
Polygon -7500403 true true 135 255 90 210 45 195 75 255 135 285
Polygon -7500403 true true 165 255 210 210 255 195 225 255 165 285
Polygon -7500403 true true 135 180 90 135 45 120 75 180 135 210
Polygon -7500403 true true 165 180 165 210 225 180 255 120 210 135
Polygon -7500403 true true 135 105 90 60 45 45 75 105 135 135
Polygon -7500403 true true 165 105 165 135 225 105 255 45 210 60
Polygon -7500403 true true 135 90 120 45 150 15 180 45 165 90

sheep
false
15
Circle -1 true true 203 65 88
Circle -1 true true 70 65 162
Circle -1 true true 150 105 120
Polygon -7500403 true false 218 120 240 165 255 165 278 120
Circle -7500403 true false 214 72 67
Rectangle -1 true true 164 223 179 298
Polygon -1 true true 45 285 30 285 30 240 15 195 45 210
Circle -1 true true 3 83 150
Rectangle -1 true true 65 221 80 296
Polygon -1 true true 195 285 210 285 210 240 240 210 195 210
Polygon -7500403 true false 276 85 285 105 302 99 294 83
Polygon -7500403 true false 219 85 210 105 193 99 201 83

square
false
0
Rectangle -7500403 true true 30 30 270 270

square 2
false
0
Rectangle -7500403 true true 30 30 270 270
Rectangle -16777216 true false 60 60 240 240

star
false
0
Polygon -7500403 true true 151 1 185 108 298 108 207 175 242 282 151 216 59 282 94 175 3 108 116 108

target
false
0
Circle -7500403 true true 0 0 300
Circle -16777216 true false 30 30 240
Circle -7500403 true true 60 60 180
Circle -16777216 true false 90 90 120
Circle -7500403 true true 120 120 60

tree
false
0
Circle -7500403 true true 118 3 94
Rectangle -6459832 true false 120 195 180 300
Circle -7500403 true true 65 21 108
Circle -7500403 true true 116 41 127
Circle -7500403 true true 45 90 120
Circle -7500403 true true 104 74 152

triangle
false
0
Polygon -7500403 true true 150 30 15 255 285 255

triangle 2
false
0
Polygon -7500403 true true 150 30 15 255 285 255
Polygon -16777216 true false 151 99 225 223 75 224

truck
false
0
Rectangle -7500403 true true 4 45 195 187
Polygon -7500403 true true 296 193 296 150 259 134 244 104 208 104 207 194
Rectangle -1 true false 195 60 195 105
Polygon -16777216 true false 238 112 252 141 219 141 218 112
Circle -16777216 true false 234 174 42
Rectangle -7500403 true true 181 185 214 194
Circle -16777216 true false 144 174 42
Circle -16777216 true false 24 174 42
Circle -7500403 false true 24 174 42
Circle -7500403 false true 144 174 42
Circle -7500403 false true 234 174 42

turtle
true
0
Polygon -10899396 true false 215 204 240 233 246 254 228 266 215 252 193 210
Polygon -10899396 true false 195 90 225 75 245 75 260 89 269 108 261 124 240 105 225 105 210 105
Polygon -10899396 true false 105 90 75 75 55 75 40 89 31 108 39 124 60 105 75 105 90 105
Polygon -10899396 true false 132 85 134 64 107 51 108 17 150 2 192 18 192 52 169 65 172 87
Polygon -10899396 true false 85 204 60 233 54 254 72 266 85 252 107 210
Polygon -7500403 true true 119 75 179 75 209 101 224 135 220 225 175 261 128 261 81 224 74 135 88 99

wheel
false
0
Circle -7500403 true true 3 3 294
Circle -16777216 true false 30 30 240
Line -7500403 true 150 285 150 15
Line -7500403 true 15 150 285 150
Circle -7500403 true true 120 120 60
Line -7500403 true 216 40 79 269
Line -7500403 true 40 84 269 221
Line -7500403 true 40 216 269 79
Line -7500403 true 84 40 221 269

wolf
false
0
Polygon -16777216 true false 253 133 245 131 245 133
Polygon -7500403 true true 2 194 13 197 30 191 38 193 38 205 20 226 20 257 27 265 38 266 40 260 31 253 31 230 60 206 68 198 75 209 66 228 65 243 82 261 84 268 100 267 103 261 77 239 79 231 100 207 98 196 119 201 143 202 160 195 166 210 172 213 173 238 167 251 160 248 154 265 169 264 178 247 186 240 198 260 200 271 217 271 219 262 207 258 195 230 192 198 210 184 227 164 242 144 259 145 284 151 277 141 293 140 299 134 297 127 273 119 270 105
Polygon -7500403 true true -1 195 14 180 36 166 40 153 53 140 82 131 134 133 159 126 188 115 227 108 236 102 238 98 268 86 269 92 281 87 269 103 269 113

x
false
0
Polygon -7500403 true true 270 75 225 30 30 225 75 270
Polygon -7500403 true true 30 75 75 30 270 225 225 270
@#$#@#$#@
NetLogo 3D 6.3.0
@#$#@#$#@
need-to-manually-make-preview-for-this-model
@#$#@#$#@
@#$#@#$#@
@#$#@#$#@
@#$#@#$#@
default
0.0
-0.2 0 0.0 1.0
0.0 1 1.0 0.0
0.2 0 0.0 1.0
link direction
true
0
Line -7500403 true 150 150 90 180
Line -7500403 true 150 150 210 180
@#$#@#$#@
0
@#$#@#$#@
